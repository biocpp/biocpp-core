name: BioC++ Linux CI

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'master'
      # Push events to branches matching refs/heads/release*
      - 'release*'
  # Trigger after PR was unlabeled
  pull_request:
    types:
      - unlabeled
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: linux-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    #if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'clang-format'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Coverage gcc12"
            cxx: "g++-12"
            cc: "gcc-12"
            os: "ubuntu-22.04"
            build: coverage
            build_type: Debug

          - name: "Unit gcc12"
            cxx: "g++-12"
            cc: "gcc-12"
            os: "ubuntu-22.04"
            build: unit
            build_type: Release

          - name: "Unit gcc11"
            cxx: "g++-11"
            cc: "gcc-11"
            os: "ubuntu-22.04"
            build: unit
            build_type: Release

          - name: "Unit gcc10"
            cxx: "g++-10"
            cc: "gcc-10"
            os: "ubuntu-22.04"
            build: unit
            build_type: Release

    steps:
      - name: Checkout BioC++
        uses: actions/checkout@v2
        with:
          path: biocpp-core
          fetch-depth: 2
          submodules: true

      #- name: Checkout SeqAn2
        #uses: actions/checkout@v2
        #with:
          #repository: seqan/seqan
          #ref: develop
          #path: biocpp-core/submodules/seqan
          #fetch-depth: 2

      - name: Configure APT
        continue-on-error: true
        run: |
          echo 'APT::Acquire::Retries "5";' | sudo tee -a /etc/apt/apt.conf.d/80-retries > /dev/null
          sudo add-apt-repository --no-update --yes ppa:ubuntu-toolchain-r/ppa
          sudo add-apt-repository --no-update --yes ppa:ubuntu-toolchain-r/test
          sudo apt-get update

      - name: Install CMake
        run: sudo apt-get install --yes cmake

      - name: Install ccache
        run: sudo apt-get install --yes ccache

      - name: Install compiler ${{ matrix.cxx }}
        run: sudo apt-get install --yes ${{ matrix.cxx }}

      - name: Install gcovr
        if: matrix.build == 'coverage'
        env:
          CC: ${{ matrix.cc }}
        run: |
          sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/${CC/gcc/gcov} 100
          pip install gcovr==5.0
      - name: Load ccache
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-
      - name: Tool versions
        run: |
          env cmake --version
          env ${{ matrix.cxx }} --version
      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          mkdir biocpp-core-build
          cd biocpp-core-build
          cmake ../biocpp-core/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}"
          make -j2 gtest_build
      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 12
          CCACHE_MAXSIZE: ${{ matrix.build == 'coverage' && '525M' || '75M' }}
          CCACHE_IGNOREOPTIONS: "-fprofile-abs-path"
          #GCOV: ${{ github.workspace }}/biocpp-core/.github/workflows/scripts/gcov.sh
        run: |
          ccache -z
          cd biocpp-core-build
          make -k -j2
          ccache -sv
      - name: Run tests
        if: matrix.build != 'coverage'
        run: |
          cd biocpp-core-build
          ctest . -j2 --output-on-failure
      - name: Submit coverage build
        if: matrix.build == 'coverage'
        uses: codecov/codecov-action@v2
        with:
          files: ${{ github.workspace }}/biocpp-core-build/biocpp-core_coverage.xml
          root_dir: ${{ github.workspace }}/biocpp-core
